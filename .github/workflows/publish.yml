name: Publish to NuGet

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Package version (leave empty to use GitVersion)'
        required: false
        type: string

jobs:
  publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Required for GitVersion

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v1
      with:
        versionSpec: '6.x'

    - name: Determine Version
      id: gitversion
      uses: gittools/actions/gitversion/execute@v1
      with:
        useConfigFile: true

    - name: Set version
      id: version
      run: |
        if [ -n "${{ inputs.version }}" ]; then
          echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
        else
          echo "version=${{ steps.gitversion.outputs.semVer }}" >> $GITHUB_OUTPUT
        fi

    - name: Restore dependencies
      run: dotnet restore RoslynMcp.sln

    - name: Build
      run: dotnet build RoslynMcp.sln --configuration Release --no-restore /p:Version=${{ steps.version.outputs.version }}

    - name: Pack
      run: dotnet pack src/RoslynMcp.csproj --configuration Release --no-build /p:Version=${{ steps.version.outputs.version }} --output ./artifacts

    - name: Publish to NuGet
      run: dotnet nuget push ./artifacts/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate
      if: github.event_name == 'release' || github.event_name == 'workflow_dispatch'

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: nuget-package-release
        path: ./artifacts/*.nupkg
        retention-days: 90

    - name: Display publish info
      run: |
        echo "Published Version: ${{ steps.version.outputs.version }}"
        echo "Package: RoslynMcp"
        ls -lh ./artifacts/
